#BlueJ class context
comment0.target=Library
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Library\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Library()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Library\r\n
comment10.params=aMember\ title\ author
comment10.target=void\ returnBook(Member,\ java.lang.String,\ java.lang.String)
comment10.text=\r\n\ A\ member\ returns\ a\ book\r\n\ \r\n\ @param\ aMember\ \ \ An\ object\ of\ Member\r\n\ @param\ title\ \ The\ title\ of\ a\ book\r\n\ @param\ author\ The\ author\ of\ a\ book\r\n\ \r\n
comment11.params=aMember
comment11.target=boolean\ isMember(Member)
comment11.text=\r\n\ Check\ if\ a\ given\ member\ is\ a\ registered\ member\ of\ the\ library\r\n\ \r\n\ @param\ aMember\ A\ given\ member\r\n\ @return\ true\ if\ aMember\ is\ in\ the\ list\ members,\ otherwise\ false\r\n
comment12.params=mid
comment12.target=boolean\ uniqueMID(java.lang.String)
comment12.text=\r\n\ Check\ if\ the\ given\ member\ ID\ is\ unique\r\n\ \r\n\ @param\ mid\ A\ given\ member\ ID\r\n\ @return\ true\ if\ the\ given\ mid\ is\ not\ assigned\ to\ any\ members\ in\ the\ library\r\n\ otherwise\ false\r\n
comment2.params=
comment2.target=void\ getMember()
comment2.text=\r\n\ Task\ 1\r\n\ Method\ to\ print\ the\ details\ of\ all\ members\ in\ the\ library\r\n\ also\ contain\ total\ number\ of\ members\r\n
comment3.params=title\ author
comment3.target=int\ numbOfCopies(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Task\ 2\r\n\ Method\ that\ takes\ title\ and\ author\ and\ returns\ number\ of\ copies\ of\ the\ same\ book\ in\ ibrary\r\n
comment4.params=newMember
comment4.target=void\ addMember(Member)
comment4.text=\r\n\ Task\ 3\r\n\ Register\ a\ new\ member\ in\ the\ library,\ takes\ an\ object\ of\ member\ returns\ nothing\r\n\ adds\ member\ into\ members\ list\ if\ valid,\ if\ not\ message\ is\ displayed\r\n\ the\ list\ members\ must\ not\ contain\ null\ values\r\n\ the\ membership\ ID\ must\ be\ unique\r\n
comment5.params=title\ author
comment5.target=Book\ getBook(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Task4\r\n\ Checks\ if\ there\ is\ a\ book\ with\ given\ title\ and\ author\ in\ the\ library\ that\ is\r\n\ available\ for\ members\ to\ borrow,\ if\ there\ is,\ it\ should\ retuern\ the\ book\r\n
comment6.params=memb
comment6.target=void\ printMembDetails(Member)
comment6.text=\r\n\ Task\ 5\r\n\ Method\ that\ takes\ an\ object\ of\ member\ and\ prints\ out\ the\ details\ of\ given\ member\r\n\ Also\ print\ out\ details\ of\ all\ books\ borrowed\ by\ member\r\n
comment7.params=memb\ title\ author
comment7.target=void\ memberBorrowBook(Member,\ java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Task\ 6\r\n\ Method\ that\ allows\ member\ to\ borrow\ a\ book,\ by\ taking\ parameters\ of\ member,\r\n\ title\ and\ author\r\n\ Only\ members\ can\ borrow\ books\r\n\ If\ a\ member\ already\ has\ a\ copy\ of\ a\ book,\ they\ cannot\ take\ it\ our\ again\r\n
comment8.params=newBook
comment8.target=void\ addBook(Book)
comment8.text=\r\n\ Add\ a\ new\ book\ into\ the\ books\ list\ of\ the\ library\r\n\ \r\n\ @param\ newBook\ A\ given\ book\ to\ be\ added\ into\ the\ books\ list\ of\ the\ library\r\n
comment9.params=
comment9.target=void\ printBookDetails()
comment9.text=\ \ \ \ \r\n\ Print\ the\ details\ of\ all\ books\ \r\n
numComments=13
